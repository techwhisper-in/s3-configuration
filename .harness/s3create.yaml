pipeline:
  name: s3-configuration
  identifier: s3
  projectIdentifier: myfirstproject
  orgIdentifier: default
  tags: {}
  variables:
    - name: infra_create
      type: String
      required: true
      value: <+input>.default(true).allowedValues(true,false)
    - name: infra_region
      type: String
      required: true
      value: <+input>.default(""ap-south-1"").allowedValues(""us-east-1"",""ap-south-1"")
    - name: infra_tags
      type: String
      required: true
      value: <+input>.default({})
    - name: Stage_to_Run
      type: String
      required: true
      value: <+input>.default("'plan'").allowedValues("'plan'","'apply'","'destroy'")
  stages:
    - stage:
        name: Plan
        identifier: plan
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: TerraformPlan
                  name: TerraformPlan_1
                  identifier: TerraformPlan_1
                  spec:
                    provisionerIdentifier: main
                    configuration:
                      command: Apply
                      configFiles:
                        store:
                          spec:
                            connectorRef: connect_to_techwhisperin
                            repoName: s3-configuration
                            gitFetchType: Branch
                            branch: main
                            folderPath: S3-create
                          type: Github
                      providerCredential:
                        type: Aws
                        spec:
                          connectorRef: <+input>
                          region: ap-south-1
                          roleArn: arn:aws:iam::590183834329:role/operation_role_for_execution_user
                      varFiles:
                        - varFile:
                            spec:
                              content: |-
                                infra_create = <+pipeline.variables.infra_create>
                                infra_region = <+pipeline.variables.infra_region>
                                infra_tags = <+pipeline.variables.infra_tags>
                            identifier: tfvars_variable
                            type: Inline
                      secretManagerRef: harnessSecretManager
                      skipRefreshCommand: false
                  timeout: 10m
        tags: {}
      when:
        expression: |
          ${pipeline.variables.Stage_to_Run == 'plan'}
    - stage:
        name: Apply
        identifier: Apply
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: TerraformApply
                  name: TerraformApply_1
                  identifier: TerraformApply_1
                  spec:
                    provisionerIdentifier: main
                    configuration:
                      type: Inline
                      spec:
                        configFiles:
                          store:
                            spec:
                              connectorRef: connect_to_techwhisperin
                              repoName: s3-configuration
                              gitFetchType: Branch
                              branch: main
                              folderPath: S3-create
                            type: Github
                        providerCredential:
                          type: Aws
                          spec:
                            connectorRef: <+input>
                            region: ap-south-1
                            roleArn: arn:aws:iam::590183834329:role/operation_role_for_execution_user
                        varFiles:
                          - varFile:
                              spec:
                                content: |-
                                  infra_create = <+pipeline.variables.infra_create>
                                  infra_region = <+pipeline.variables.infra_region>
                                  infra_tags = <+pipeline.variables.infra_tags>
                              identifier: tfvars_variable
                              type: Inline
                  timeout: 10m
        tags: {}
      when:
        expression: |
          ${pipeline.variables.Stage_to_Run == 'apply'}
    - stage:
        name: Destroy
        identifier: Destroy
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: TerraformDestroy
                  name: TerraformDestroy_1
                  identifier: TerraformDestroy_1
                  spec:
                    provisionerIdentifier: main
                    configuration:
                      type: Inline
                      spec:
                        configFiles:
                          store:
                            spec:
                              connectorRef: connect_to_techwhisperin
                              repoName: s3-configuration
                              gitFetchType: Branch
                              branch: main
                              folderPath: S3-create
                            type: Github
                        providerCredential:
                          type: Aws
                          spec:
                            connectorRef: <+input>
                            region: ap-south-1
                            roleArn: arn:aws:iam::590183834329:role/operation_role_for_execution_user
                  timeout: 10m
        tags: {}
      when:
        expression: |
          ${pipeline.variables.Stage_to_Run == 'destroy'}
